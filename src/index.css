@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-background text-gray-800;
  }
}

.particle {
  filter: blur(4px);
  box-shadow: 0 0 15px currentColor;
  transform-origin: center;
  will-change: transform, opacity;
  opacity: 0.8;
}

.data-source {
  transition: filter 0.3s ease;
  filter: drop-shadow(0 0 5px currentColor);
}

.data-source:hover {
  filter: drop-shadow(0 0 10px currentColor);
}

.path-line {
  opacity: 0.2;
  stroke: theme('colors.primary');
  stroke-linecap: round;
  stroke-linejoin: round;
  will-change: opacity;
}

.output-icon {
  color: theme('colors.secondary');
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.8s ease;
  filter: drop-shadow(0 0 4px rgba(16, 80, 105, 0.1));
}

.output-icon.active {
  opacity: 1;
  transform: scale(1);
  animation: slowPulse 3s ease-in-out infinite;
}

@keyframes slowPulse {
  0% {
    filter: drop-shadow(0 0 4px rgba(29, 156, 156, 0.1));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(29, 156, 156, 0.3));
  }
  100% {
    filter: drop-shadow(0 0 4px rgba(29, 156, 156, 0.1));
  }
}

.output-text {
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.5s ease;
}

.output-text.active {
  opacity: 1;
  transform: translateY(0);
}

.output-icon-container, .output-text-container {
  position: relative;
}

.output-particles-container {
  pointer-events: none;
  z-index: 30;
  position: absolute;
  inset: -100px;
}

.output-particle {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  filter: blur(3px);
  opacity: 0;
  transform: translate(-50%, -50%);
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Particle colors for different sources */
.output-particle.api {
  background-color: theme('colors.primary');
  box-shadow: 0 0 12px theme('colors.primary');
}

.output-particle.geospatial {
  background-color: theme('colors.secondary');
  box-shadow: 0 0 12px theme('colors.secondary');
}

.output-particle.pdf {
  background-color: theme('colors.primary');
  box-shadow: 0 0 12px theme('colors.primary');
}

.tube-line {
  stroke-dasharray: 20;
  animation: flow 1s linear infinite;
  filter: drop-shadow(0 0 12px currentColor);
}

@keyframes gradientFlow {
  0% { stroke: theme('colors.primary'); }
  20% { stroke: theme('colors.secondary'); }
  40% { stroke: theme('colors.primary'); }
  60% { stroke: theme('colors.secondary'); }
  80% { stroke: theme('colors.primary'); }
  100% { stroke: theme('colors.secondary'); }
}

@keyframes flow {
  from {
    stroke-dashoffset: 20;
  }
  to {
    stroke-dashoffset: 0;
  }
}

.tunnel-layer {
  animation: pulseOpacity 2s ease-in-out infinite;
}

.tunnel-flow {
  animation: flowAnimation 1s linear infinite;
  filter: drop-shadow(0 0 8px #6366F1);
}

@keyframes pulseOpacity {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

@keyframes flowAnimation {
  0% { stroke-dashoffset: 16; }
  100% { stroke-dashoffset: 0; }
}

/* Add a glow container */
.glow-container {
  position: absolute;
  inset: -20px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(29, 156, 156, 0.2) 0%, rgba(29, 156, 156, 0) 70%);
  opacity: 0;
  transition: opacity 0.5s ease;
}

.active .glow-container {
  opacity: 1;
  animation: glowPulse 2s infinite;
}

@keyframes glowPulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}

.output-icon-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.output-icon {
  opacity: 0.7;
  transition: all 0.5s ease;
}

.output-icon.active {
  opacity: 1;
  filter: drop-shadow(0 0 10px #1D9C9C);
}

.output-icon:not(.active) {
  filter: drop-shadow(0 0 5px #105069);
}

.transform-style-3d {
  transform-style: preserve-3d;
}

.transform-3d {
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.origin-bottom-middle {
  transform-origin: bottom center;
}

.rotate-x-30 {
  transform: rotateX(30deg);
}

.rotate-y-30 {
  transform: rotateY(30deg);
}

.-rotate-y-30 {
  transform: rotateY(-30deg);
}

.pyramid-icon {
  animation: processData 3s ease-in-out infinite;
}

.processing-ring {
  animation: spin 8s linear infinite;
}

.processing-ring-reverse {
  animation: spin 6s linear infinite reverse;
}

@keyframes processData {
  0% {
    transform: scale(1) translateY(0);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1) translateY(-5px);
    opacity: 1;
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 0.8;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Pyramid Container */
.isometric-pyramid {
  transform-style: preserve-3d;
  animation: pyramidFloat 3s ease-in-out infinite;
  position: relative;
  width: 320px;  /* Doubled from 160px */
  height: 320px;  /* Doubled from 160px */
  margin: 0 auto;
}

/* Individual pyramid faces */
.pyramid-face {
  transition: all 0.3s ease;
  filter: url(#pyramidGlow);
  transform-origin: center center;
}

/* Face-specific styling */
.pyramid-face.front {
  opacity: 0.9;
  transform: translateZ(2px);
}

.pyramid-face.left {
  opacity: 0.8;
  transform: translateZ(1px);
}

.pyramid-face.right {
  opacity: 0.7;
  transform: translateZ(0);
}

/* Floating animation */
@keyframes pyramidFloat {
  0%, 100% {
    transform: translateY(0) translateZ(0) rotateX(0deg) rotateY(0deg);
    filter: drop-shadow(0 20px 30px rgba(29, 156, 156, 0.2));
  }
  50% {
    transform: translateY(-10px) translateZ(5px) rotateX(2deg) rotateY(2deg);
    filter: drop-shadow(0 30px 40px rgba(29, 156, 156, 0.3));
  }
}

/* Hover effects */
.isometric-pyramid:hover .pyramid-face {
  filter: url(#pyramidGlow) brightness(1.2);
}

/* Ambient light effect */
.isometric-pyramid::after {
  content: '';
  position: absolute;
  inset: -20px;
  background: radial-gradient(circle, rgba(29, 156, 156, 0.2) 0%, rgba(29, 156, 156, 0) 70%);
  opacity: 0.5;
  animation: ambientLight 4s ease-in-out infinite;
  pointer-events: none;
}

@keyframes ambientLight {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.5; }
}